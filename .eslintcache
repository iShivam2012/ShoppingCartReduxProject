[{"D:\\Study\\ShoppingCartReduxProject\\src\\index.js":"1","D:\\Study\\ShoppingCartReduxProject\\src\\App.js":"2","D:\\Study\\ShoppingCartReduxProject\\src\\components\\Cart\\Cart.js":"3","D:\\Study\\ShoppingCartReduxProject\\src\\components\\Shop\\Products.js":"4","D:\\Study\\ShoppingCartReduxProject\\src\\components\\Layout\\Layout.js":"5","D:\\Study\\ShoppingCartReduxProject\\src\\components\\Cart\\CartItem.js":"6","D:\\Study\\ShoppingCartReduxProject\\src\\components\\Layout\\MainHeader.js":"7","D:\\Study\\ShoppingCartReduxProject\\src\\components\\Shop\\ProductItem.js":"8","D:\\Study\\ShoppingCartReduxProject\\src\\components\\UI\\Card.js":"9","D:\\Study\\ShoppingCartReduxProject\\src\\components\\Cart\\CartButton.js":"10","D:\\Study\\ShoppingCartReduxProject\\src\\store\\index.js":"11","D:\\Study\\ShoppingCartReduxProject\\src\\components\\UI\\Notification.js":"12","D:\\Study\\ShoppingCartReduxProject\\src\\components\\Action\\cart-action.js":"13"},{"size":260,"mtime":1625687738383,"results":"14","hashOfConfig":"15"},{"size":2174,"mtime":1626035197342,"results":"16","hashOfConfig":"15"},{"size":830,"mtime":1625776958969,"results":"17","hashOfConfig":"15"},{"size":724,"mtime":1625778856240,"results":"18","hashOfConfig":"15"},{"size":233,"mtime":1616596383000,"results":"19","hashOfConfig":"15"},{"size":1128,"mtime":1625777927091,"results":"20","hashOfConfig":"15"},{"size":361,"mtime":1616596383000,"results":"21","hashOfConfig":"15"},{"size":2047,"mtime":1625950018675,"results":"22","hashOfConfig":"15"},{"size":244,"mtime":1616596383000,"results":"23","hashOfConfig":"15"},{"size":538,"mtime":1625772536112,"results":"24","hashOfConfig":"15"},{"size":2773,"mtime":1625955671357,"results":"25","hashOfConfig":"15"},{"size":514,"mtime":1625956226784,"results":"26","hashOfConfig":"15"},{"size":1063,"mtime":1626035151340,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1eyo1v5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Study\\ShoppingCartReduxProject\\src\\index.js",[],["57","58"],"D:\\Study\\ShoppingCartReduxProject\\src\\App.js",["59"],"D:\\Study\\ShoppingCartReduxProject\\src\\components\\Cart\\Cart.js",[],"D:\\Study\\ShoppingCartReduxProject\\src\\components\\Shop\\Products.js",[],"D:\\Study\\ShoppingCartReduxProject\\src\\components\\Layout\\Layout.js",[],"D:\\Study\\ShoppingCartReduxProject\\src\\components\\Cart\\CartItem.js",[],"D:\\Study\\ShoppingCartReduxProject\\src\\components\\Layout\\MainHeader.js",[],"D:\\Study\\ShoppingCartReduxProject\\src\\components\\Shop\\ProductItem.js",["60"],"import { useDispatch, useSelector } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  // const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const { id, title, price, description } = props;\n\n  const onAddToCartHandler = () => {\n    //   const newTotalQuantity = cart.totalQuantity + 1;\n\n    //   const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n    //   const existingItem = updatedItems.find((item) => item.id === id);\n    //   if (existingItem) {\n    //     const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n    //     updatedItem.quantity++;\n    //     updatedItem.totalPrice = updatedItem.totalPrice + price;\n    //     const existingItemIndex = updatedItems.findIndex(\n    //       (item) => item.id === id\n    //     );\n    //     updatedItems[existingItemIndex] = updatedItem;\n    //   } else {\n    //     updatedItems.push({\n    //       id: id,\n    //       price: price,\n    //       quantity: 1,\n    //       totalPrice: price,\n    //       name: title,\n    //     });\n    //   }\n\n    //   const newCart = {\n    //     totalQuantity: newTotalQuantity,\n    //     items: updatedItems,\n    //   };\n\n    //   dispatch(cartActions.replaceCart(newCart));\n\n    // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n    dispatch({\n      type: \"ADD_ITEM\",\n      payload: {\n        id,\n        quantity: 1,\n        title,\n        price,\n      },\n    });\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={onAddToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","D:\\Study\\ShoppingCartReduxProject\\src\\components\\UI\\Card.js",[],"D:\\Study\\ShoppingCartReduxProject\\src\\components\\Cart\\CartButton.js",[],"D:\\Study\\ShoppingCartReduxProject\\src\\store\\index.js",["61"],"import { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\nimport { combineReducers, createStore } from \"redux\";\r\n\r\nconst uiInitialState = {\r\n  isCartVisible: false,\r\n  notification: null,\r\n};\r\nconst uiReducer = (state = uiInitialState, action) => {\r\n  if (action.type === \"TOGGLE\") {\r\n    return {\r\n      ...state,\r\n      isCartVisible: !state.isCartVisible,\r\n    };\r\n  }\r\n  if (action.type === \"SHOW_NOTIFICATION\") {\r\n    return {\r\n      ...state,\r\n      notification: {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      },\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst cartState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n};\r\n\r\n// const replaceCartReducer = (state = cartState, action) => {\r\n//   return {\r\n//     items: action.payload.items,\r\n//     totalQuantity: action.payload.totalQuantity,\r\n//   };\r\n// };\r\n\r\nconst cartReducer = (state = cartState, action) => {\r\n  if (action.type === \"ADD_ITEM\") {\r\n    const newItem = action.payload;\r\n    const existingItemIndex = state.items.findIndex(\r\n      (item) => item.id === newItem.id\r\n    );\r\n    const existingItem = state.items[existingItemIndex];\r\n    let updatedItem;\r\n    let updatedItems = [...state.items];\r\n    if (existingItem) {\r\n      updatedItem = {\r\n        ...existingItem,\r\n        quantity: existingItem.quantity + newItem.quantity,\r\n        totalAmount: existingItem.totalAmount + newItem.price,\r\n      };\r\n      updatedItems[existingItemIndex] = updatedItem;\r\n    } else {\r\n      let updatedItem = { ...newItem, totalAmount: newItem.price };\r\n      updatedItems = updatedItems.concat(updatedItem);\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalQuantity: state.totalQuantity + 1,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n    const newItem = action.payload;\r\n    const existingItemIndex = state.items.findIndex(\r\n      (item) => item.id === newItem.id\r\n    );\r\n    const existingItem = state.items[existingItemIndex];\r\n    let updatedItem;\r\n    let updatedItems;\r\n    if (existingItem.quantity === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== newItem.id);\r\n    } else {\r\n      updatedItem = {\r\n        ...existingItem,\r\n        quantity: existingItem.quantity - 1,\r\n        totalAmount: existingItem.totalAmount - existingItem.price,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingItemIndex] = updatedItem;\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalQuantity: state.totalQuantity - 1,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  cartVisible: uiReducer,\r\n  cart: cartReducer,\r\n  // replace: replaceCartReducer,\r\n});\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","D:\\Study\\ShoppingCartReduxProject\\src\\components\\UI\\Notification.js",[],"D:\\Study\\ShoppingCartReduxProject\\src\\components\\Action\\cart-action.js",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":64,"column":6,"nodeType":"69","endLine":64,"endColumn":12,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":23,"nodeType":"73","messageId":"74","endLine":1,"endColumn":34},{"ruleId":"71","severity":1,"message":"75","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"76","line":13,"column":24},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'act' is defined but never used.","Parsing error: Unexpected reserved word 'await'.\n\n\u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m     \u001b[36mconst\u001b[39m sendRequest \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m         \u001b[32m\"https://foodorderingappv1-default-rtdb.firebaseio.com/cart.json\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m         {\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m           method\u001b[33m:\u001b[39m \u001b[32m\"PUT\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [cart, dispatch]",{"range":"82","text":"83"},[1841,1847],"[cart, dispatch]"]